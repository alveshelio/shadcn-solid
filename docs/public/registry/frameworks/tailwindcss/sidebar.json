{
  "name": "sidebar",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sidebar.tsx",
      "content": "import { Button } from \"@repo/tailwindcss/ui/button\";\nimport { Separator } from \"@repo/tailwindcss/ui/separator\";\nimport { Sheet, SheetContent } from \"@repo/tailwindcss/ui/sheet\";\nimport { TextField } from \"@repo/tailwindcss/ui/textfield\";\n\nimport { cn } from \"@/libs/cn\";\nimport { Skeleton } from \"@repo/tailwindcss/ui/skeleton\";\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipTrigger,\n} from \"@repo/tailwindcss/ui/tooltip\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport {\n\ttype Accessor,\n\ttype ComponentProps,\n\ttype JSX,\n\tShow,\n\tcreateContext,\n\tcreateMemo,\n\tcreateSignal,\n\tmergeProps,\n\tonCleanup,\n\tonMount,\n\tsplitProps,\n\tuseContext,\n} from \"solid-js\";\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\";\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = \"16rem\";\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\nconst MOBILE_BREAKPOINT = 768;\n\ntype SidebarContext = {\n\tstate: \"expanded\" | \"collapsed\";\n\topen: boolean;\n\tsetOpen: (open: boolean) => void;\n\topenMobile: boolean;\n\tsetOpenMobile: (open: boolean) => void;\n\tisMobile: boolean;\n\ttoggleSidebar: () => void;\n};\n\nconst SidebarContext = createContext<Accessor<SidebarContext> | null>(null);\n\nfunction useSidebar() {\n\tconst context = useContext(SidebarContext);\n\n\tif (!context) {\n\t\tthrow new Error(\"useSidebar must be used within a SidebarProvider\");\n\t}\n\n\treturn context;\n}\n\nexport function useIsMobile() {\n\tconst [isMobile, setIsMobile] = createSignal<boolean>(false);\n\n\tonMount(() => {\n\t\tconst mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n\t\tconst onChange = () => {\n\t\t\tsetIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n\t\t};\n\n\t\tmql.addEventListener(\"change\", onChange);\n\t\tsetIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n\n\t\tonCleanup(() => mql.removeEventListener(\"change\", onChange));\n\t});\n\n\treturn isMobile;\n}\n\ntype SidebarProviderProps = {\n\tdefaultOpen?: boolean;\n\topen?: boolean;\n\tonOpenChange?: (open: boolean) => void;\n\tchildren: JSX.Element;\n} & ComponentProps<\"div\">;\n\nconst SidebarProvider = (props: SidebarProviderProps) => {\n\tconst isMobile = useIsMobile();\n\tconst [openMobile, setOpenMobile] = createSignal(false);\n\n\tconst [local, rest] = splitProps(props, [\n\t\t\"open\",\n\t\t\"class\",\n\t\t\"style\",\n\t\t\"defaultOpen\",\n\t\t\"onOpenChange\",\n\t\t\"children\",\n\t]);\n\n\t// This is the internal state of the sidebar.\n\t// We use local.open and local.onOpenChange for control from outside the component.\n\tconst [_open, _setOpen] = createSignal(local.defaultOpen ?? true);\n\tconst open = () => local.open ?? _open();\n\n\tconst setOpen = (value: boolean | ((value: boolean) => boolean)) => {\n\t\tconst openState = typeof value === \"function\" ? value(open()) : open();\n\t\t_setOpen(openState);\n\t\tlocal.onOpenChange?.(open());\n\n\t\tdocument.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n\t};\n\n\tconst toggleSidebar = () => {\n\t\tisMobile() ? setOpenMobile(!openMobile()) : setOpen(!open());\n\t};\n\n\t// Adds a keyboard shortcut to toggle the sidebar\n\tonMount(() => {\n\t\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\t\tif (\n\t\t\t\tevent.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n\t\t\t\t(event.metaKey || event.ctrlKey)\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\ttoggleSidebar();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener(\"keydown\", handleKeyDown);\n\t\tonCleanup(() => window.removeEventListener(\"keydown\", handleKeyDown));\n\t});\n\n\t// We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n\t// This makes it easier to style the sidebar with Tailwind classes.\n\tconst state = open() ? \"expanded\" : \"collapsed\";\n\n\tconst contextValue = createMemo<SidebarContext>(() => ({\n\t\tstate,\n\t\topen: open(),\n\t\tsetOpen,\n\t\tisMobile: isMobile(),\n\t\topenMobile: openMobile(),\n\t\tsetOpenMobile,\n\t\ttoggleSidebar,\n\t}));\n\n\treturn (\n\t\t<SidebarContext.Provider value={contextValue}>\n\t\t\t<div\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\tstyle={{\n\t\t\t\t\t\"--sidebar-width\": SIDEBAR_WIDTH,\n\t\t\t\t\t\"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n\t\t\t\t\t...(local.style as JSX.CSSProperties),\n\t\t\t\t}}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t</div>\n\t\t</SidebarContext.Provider>\n\t);\n};\n\ntype SidebarProps = {\n\tside?: \"left\" | \"right\";\n\tvariant?: \"sidebar\" | \"floating\" | \"inset\";\n\tcollapsible?: \"offcanvas\" | \"icon\" | \"none\";\n\tchildren: JSX.Element;\n} & ComponentProps<\"div\">;\n\nconst Sidebar = (props: SidebarProps) => {\n\tconst mergedProps = mergeProps(\n\t\t{\n\t\t\tside: \"left\" as const,\n\t\t\tvariant: \"sidebar\" as const,\n\t\t\tcollapsible: \"offcanvas\" as const,\n\t\t},\n\t\tprops,\n\t);\n\n\tconst [local, rest] = splitProps<\n\t\tSidebarProps,\n\t\t[[\"class\", \"children\", \"side\", \"variant\", \"collapsible\"]]\n\t>(mergedProps, [\"class\", \"children\", \"side\", \"variant\", \"collapsible\"]);\n\n\tconst context = useSidebar();\n\n\tif (local.collapsible === \"none\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"bg-sidebar text-sidebar-foreground flex h-full w-[--sidebar-width] flex-col\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (context().isMobile) {\n\t\treturn (\n\t\t\t<Sheet\n\t\t\t\topen={context().openMobile}\n\t\t\t\tonOpenChange={context().setOpenMobile}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<SheetContent\n\t\t\t\t\tdata-sidebar=\"sidebar\"\n\t\t\t\t\tdata-mobile=\"true\"\n\t\t\t\t\tclass=\"bg-sidebar text-sidebar-foreground w-[--sidebar-width] p-0 [&>button]:hidden\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n\t\t\t\t\t\t} as JSX.CSSProperties\n\t\t\t\t\t}\n\t\t\t\t\tside={local.side}\n\t\t\t\t>\n\t\t\t\t\t<div class=\"flex h-full w-full flex-col\">{local.children}</div>\n\t\t\t\t</SheetContent>\n\t\t\t</Sheet>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclass=\"text-sidebar-foreground group peer hidden md:block\"\n\t\t\tdata-state={context().state}\n\t\t\tdata-collapsible={\n\t\t\t\tcontext().state === \"collapsed\" ? local.collapsible : \"\"\n\t\t\t}\n\t\t\tdata-variant={local.variant}\n\t\t\tdata-side={local.side}\n\t\t>\n\t\t\t{/* This is what handles the sidebar gap on desktop */}\n\t\t\t<div\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n\t\t\t\t\t\"group-data-[collapsible=offcanvas]:w-0\",\n\t\t\t\t\t\"group-data-[side=right]:rotate-180\",\n\t\t\t\t\tlocal.variant === \"floating\" || local.variant === \"inset\"\n\t\t\t\t\t\t? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n\t\t\t\t\t\t: \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\",\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n\t\t\t\t\tlocal.side === \"left\"\n\t\t\t\t\t\t? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n\t\t\t\t\t\t: \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n\t\t\t\t\t// Adjust the padding for floating and inset variants.\n\t\t\t\t\tlocal.variant === \"floating\" || local.variant === \"inset\"\n\t\t\t\t\t\t? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n\t\t\t\t\t\t: \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tdata-sidebar=\"sidebar\"\n\t\t\t\t\tclass=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow\"\n\t\t\t\t>\n\t\t\t\t\t{local.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\ntype SidebarTriggerProps = ComponentProps<\"button\">;\n\nconst SidebarTrigger = (props: SidebarTriggerProps) => {\n\tconst context = useSidebar();\n\n\tconst [local, rest] = splitProps<SidebarTriggerProps, [[\"class\", \"onClick\"]]>(\n\t\tprops,\n\t\t[\"class\", \"onClick\"],\n\t);\n\n\treturn (\n\t\t<Button\n\t\t\tdata-sidebar=\"trigger\"\n\t\t\tvariant=\"ghost\"\n\t\t\tsize=\"icon\"\n\t\t\tclass={cn(\"h-7 w-7\", local.class)}\n\t\t\tonClick={[local.onClick, () => context().toggleSidebar()]}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\twidth=\"24\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\tclass=\"lucide lucide-panel-left\"\n\t\t\t>\n\t\t\t\t<title>Menu Icon</title>\n\t\t\t\t<rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" />\n\t\t\t\t<path d=\"M9 3v18\" />\n\t\t\t</svg>\n\t\t\t<span class=\"sr-only\">Toggle Sidebar</span>\n\t\t</Button>\n\t);\n};\n\nconst SidebarRail = (props: ComponentProps<\"button\">) => {\n\tconst context = useSidebar();\n\n\tconst [local, rest] = splitProps<SidebarTriggerProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<button\n\t\t\tdata-sidebar=\"rail\"\n\t\t\taria-label=\"Toggle Sidebar\"\n\t\t\ttabIndex={-1}\n\t\t\tonClick={context().toggleSidebar}\n\t\t\ttitle=\"Toggle Sidebar\"\n\t\t\tclass={cn(\n\t\t\t\t\"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n\t\t\t\t\"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n\t\t\t\t\"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n\t\t\t\t\"group-data-[collapsible=offcanvas]:hover:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n\t\t\t\t\"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n\t\t\t\t\"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarInsetProps = ComponentProps<\"main\">;\n\nconst SidebarInset = (props: SidebarInsetProps) => {\n\tconst [local, rest] = splitProps<SidebarInsetProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<main\n\t\t\tclass={cn(\n\t\t\t\t\"bg-background relative flex min-h-svh flex-1 flex-col\",\n\t\t\t\t\"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarInputProps = ComponentProps<typeof TextField>;\nconst SidebarInput = (props: SidebarInputProps) => {\n\tconst [local, rest] = splitProps<SidebarInputProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<TextField\n\t\t\tdata-sidebar=\"input\"\n\t\t\tclass={cn(\n\t\t\t\t\"bg-background focus-visible:ring-sidebar-ring h-8 w-full shadow-none focus-visible:ring-2\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarHeaderProps = ComponentProps<\"div\">;\n\nconst SidebarHeader = (props: SidebarHeaderProps) => {\n\tconst [local, rest] = splitProps<SidebarHeaderProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"header\"\n\t\t\tclass={cn(\"flex flex-col gap-2 p-2\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarFooterProps = ComponentProps<\"div\">;\n\nconst SidebarFooter = (props: SidebarFooterProps) => {\n\tconst [local, rest] = splitProps<SidebarFooterProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"footer\"\n\t\t\tclass={cn(\"flex flex-col gap-2 p-2\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarSeparatorProps = ComponentProps<typeof Separator>;\n\nconst SidebarSeparator = (props: SidebarSeparatorProps) => {\n\tconst [local, rest] = splitProps<SidebarSeparatorProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<Separator\n\t\t\tdata-sidebar=\"separator\"\n\t\t\tclassName={cn(\"bg-sidebar-border mx-2 w-auto\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarContentProps = ComponentProps<\"div\">;\n\nconst SidebarContent = (props: SidebarContentProps) => {\n\tconst [local, rest] = splitProps<SidebarContentProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"content\"\n\t\t\tclass={cn(\n\t\t\t\t\"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarGroupProps = ComponentProps<\"div\">;\n\nconst SidebarGroup = (props: SidebarGroupProps) => {\n\tconst [local, rest] = splitProps<SidebarGroupProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"group\"\n\t\t\tclass={cn(\"relative flex w-full min-w-0 flex-col p-2\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarGroupLabelProps = ComponentProps<\"div\">;\n\nconst SidebarGroupLabel = (props: SidebarGroupLabelProps) => {\n\tconst [local, rest] = splitProps<SidebarGroupLabelProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"group-label\"\n\t\t\tclass={cn(\n\t\t\t\t\"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-none transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t\"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarGroupActionProps = ComponentProps<\"button\">;\n\nconst SidebarGroupAction = (props: SidebarGroupActionProps) => {\n\tconst [local, rest] = splitProps<SidebarGroupActionProps, [[\"class\"]]>(\n\t\tprops,\n\t\t[\"class\"],\n\t);\n\treturn (\n\t\t<button\n\t\t\tdata-sidebar=\"group-action\"\n\t\t\tclass={cn(\n\t\t\t\t\"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-none transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t// Increases the hit area of the button on mobile.\n\t\t\t\t\"after:absolute after:-inset-2 after:md:hidden\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarGroupContentProps = ComponentProps<\"div\">;\n\nconst SidebarGroupContent = (props: SidebarGroupContentProps) => {\n\tconst [local, rest] = splitProps<SidebarGroupContentProps, [[\"class\"]]>(\n\t\tprops,\n\t\t[\"class\"],\n\t);\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"group-content\"\n\t\t\tclass={cn(\"w-full text-sm\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarMenuProps = ComponentProps<\"ul\">;\n\nconst SidebarMenu = (props: SidebarMenuProps) => {\n\tconst [local, rest] = splitProps<SidebarMenuProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<ul\n\t\t\tdata-sidebar=\"menu\"\n\t\t\tclass={cn(\"flex w-full min-w-0 flex-col gap-1\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarMenuItemProps = ComponentProps<\"li\">;\n\nconst SidebarMenuItem = (props: SidebarMenuItemProps) => {\n\tconst [local, rest] = splitProps<SidebarMenuItemProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<li\n\t\t\tdata-sidebar=\"menu-item\"\n\t\t\tclass={cn(\"group/menu-item relative\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nconst sidebarMenuButtonVariants = cva(\n\t\"peer/menu-button ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none transition-[width,height,padding] focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:font-medium group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n\t\t\t\toutline:\n\t\t\t\t\t\"bg-background hover:bg-sidebar-accent hover:text-sidebar-accent-foreground shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"h-8 text-sm\",\n\t\t\t\tsm: \"h-7 text-xs\",\n\t\t\t\tlg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\",\n\t\t},\n\t},\n);\n\ntype SidebarMenuButtonProps = ComponentProps<\"button\"> & {\n\tisActive?: boolean;\n\ttooltip?: string | ComponentProps<typeof TooltipContent>;\n} & VariantProps<typeof sidebarMenuButtonVariants>;\n\nconst SidebarMenuButton = (props: SidebarMenuButtonProps) => {\n\tconst context = useSidebar();\n\tconst mergedProps = mergeProps(\n\t\t{\n\t\t\tisActive: false,\n\t\t\tvariant: \"default\" as const,\n\t\t\tsize: \"default\" as const,\n\t\t},\n\t\tprops,\n\t);\n\n\tconst [local, rest] = splitProps<\n\t\tSidebarMenuButtonProps,\n\t\t[[\"children\", \"tooltip\", \"isActive\", \"variant\", \"size\", \"class\"]]\n\t>(mergedProps, [\n\t\t\"children\",\n\t\t\"tooltip\",\n\t\t\"isActive\",\n\t\t\"variant\",\n\t\t\"size\",\n\t\t\"class\",\n\t]);\n\n\tconst button = (\n\t\t<button\n\t\t\tclass={cn(\n\t\t\t\tsidebarMenuButtonVariants({\n\t\t\t\t\tvariant: local.variant,\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\tdata-sidebar=\"menu-button\"\n\t\t\tdata-size={local.size}\n\t\t\tdata-active={local.isActive}\n\t\t\t{...rest}\n\t\t/>\n\t);\n\n\tif (!local.tooltip) {\n\t\treturn button;\n\t}\n\n\tif (typeof local.tooltip === \"string\") {\n\t\tlocal.tooltip = {\n\t\t\tchildren: local.tooltip,\n\t\t};\n\t}\n\n\treturn (\n\t\t<Tooltip>\n\t\t\t<TooltipTrigger>{button}</TooltipTrigger>\n\t\t\t<TooltipContent\n\t\t\t\tside=\"right\"\n\t\t\t\talign=\"center\"\n\t\t\t\thidden={context().state !== \"collapsed\" || context().isMobile}\n\t\t\t\t{...local.tooltip}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n};\n\ntype SidebarMenuActionProps = ComponentProps<\"button\"> & {\n\tshowOnHover?: boolean;\n};\nconst SidebarMenuAction = (props: SidebarMenuActionProps) => {\n\tconst [local, rest] = splitProps<\n\t\tSidebarMenuActionProps,\n\t\t[[\"class\", \"showOnHover\"]]\n\t>(props, [\"class\", \"showOnHover\"]);\n\n\treturn (\n\t\t<button\n\t\t\tdata-sidebar=\"menu-action\"\n\t\t\tclass={cn(\n\t\t\t\t\"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-none transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t// Increases the hit area of the button on mobile.\n\t\t\t\t\"after:absolute after:-inset-2 after:md:hidden\",\n\t\t\t\t\"peer-data-[size=sm]/menu-button:top-1\",\n\t\t\t\t\"peer-data-[size=default]/menu-button:top-1.5\",\n\t\t\t\t\"peer-data-[size=lg]/menu-button:top-2.5\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tlocal.showOnHover &&\n\t\t\t\t\t\"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarMenuBadgeProps = ComponentProps<\"div\">;\n\nconst SidebarMenuBadge = (props: SidebarMenuBadgeProps) => {\n\tconst [local, rest] = splitProps<SidebarMenuBadgeProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"menu-badge\"\n\t\t\tclass={cn(\n\t\t\t\t\"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums\",\n\t\t\t\t\"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n\t\t\t\t\"peer-data-[size=sm]/menu-button:top-1\",\n\t\t\t\t\"peer-data-[size=default]/menu-button:top-1.5\",\n\t\t\t\t\"peer-data-[size=lg]/menu-button:top-2.5\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarMenuSkeletonProps = ComponentProps<\"div\"> & { showIcon?: boolean };\n\nconst SidebarMenuSkeleton = (props: SidebarMenuSkeletonProps) => {\n\tconst [local, rest] = splitProps<\n\t\tSidebarMenuSkeletonProps,\n\t\t[[\"class\", \"showIcon\"]]\n\t>(props, [\"class\", \"showIcon\"]);\n\n\tconst width = () => `${Math.floor(Math.random() * 40) + 50}%`;\n\n\treturn (\n\t\t<div\n\t\t\tdata-sidebar=\"menu-skeleton\"\n\t\t\tclass={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", local.class)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<Show when={local.showIcon}>\n\t\t\t\t<Skeleton class=\"size-4 rounded-md\" data-sidebar=\"menu-skeleton-icon\" />\n\t\t\t</Show>\n\t\t\t<Skeleton\n\t\t\t\tclass=\"h-4 max-w-[--skeleton-width] flex-1\"\n\t\t\t\tdata-sidebar=\"menu-skeleton-text\"\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\t\"--skeleton-width\": width(),\n\t\t\t\t\t} as JSX.CSSProperties\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\ntype SidebarMenuSubProps = ComponentProps<\"ul\">;\nconst SidebarMenuSub = (props: SidebarMenuSubProps) => {\n\tconst [local, rest] = splitProps<SidebarMenuSubProps, [[\"class\"]]>(props, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<ul\n\t\t\tdata-sidebar=\"menu-sub\"\n\t\t\tclass={cn(\n\t\t\t\t\"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype SidebarMenuSubItemProps = ComponentProps<\"li\">;\n\nconst SidebarMenuSubItem = (props: SidebarMenuSubItemProps) => {\n\treturn <li {...props} />;\n};\n\ntype SidebarMenuSubButtonProps = ComponentProps<\"a\"> & {\n\tsize?: \"sm\" | \"md\";\n\tisActive?: boolean;\n};\n\nconst SidebarMenuSubButton = (props: SidebarMenuSubButtonProps) => {\n\tconst mergedProps = mergeProps(\n\t\t{\n\t\t\tsize: \"md\" as const,\n\t\t\tisActive: false,\n\t\t},\n\t\tprops,\n\t);\n\n\tconst [local, rest] = splitProps<\n\t\tSidebarMenuSubButtonProps,\n\t\t[[\"class\", \"size\", \"isActive\"]]\n\t>(mergedProps, [\"class\", \"size\", \"isActive\"]);\n\n\treturn (\n\t\t<a\n\t\t\tdata-sidebar=\"menu-sub-button\"\n\t\t\tdata-size={local.size}\n\t\t\tdata-active={local.isActive}\n\t\t\tclass={cn(\n\t\t\t\t\"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-none focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t\"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n\t\t\t\tlocal.size === \"sm\" && \"text-xs\",\n\t\t\t\tlocal.size === \"md\" && \"text-sm\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport {\n\tSidebar,\n\tSidebarContent,\n\tSidebarFooter,\n\tSidebarGroup,\n\tSidebarGroupAction,\n\tSidebarGroupContent,\n\tSidebarGroupLabel,\n\tSidebarHeader,\n\tSidebarInput,\n\tSidebarInset,\n\tSidebarMenu,\n\tSidebarMenuAction,\n\tSidebarMenuBadge,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tSidebarMenuSkeleton,\n\tSidebarMenuSub,\n\tSidebarMenuSubButton,\n\tSidebarMenuSubItem,\n\tSidebarProvider,\n\tSidebarRail,\n\tSidebarSeparator,\n\tSidebarTrigger,\n\tuseSidebar,\n};\n"
    }
  ],
  "type": "components:ui"
}